name: build-latest
on:
#  workflow_dispatch:
#    inputs:
#      distro:
#        description: Base image distro
#        required: true
#        default: debian
#      imageVersion:
#        description: Base distro image version/release
#        required: true
#        default: bullseye
#      imageVariant:
#        description: Base image variant
#        required: true
#        default: slim
  workflow_dispatch:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop
      - helm-chart
jobs:
  run-scenario-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        geoserverVersion:
          - 2
        geoserverMajorVersion:
          - 2
        imageVersion:
          - image: 9.0-jdk11-openjdk-slim-buster
            javaHome: /usr/local/openjdk-11
        geoserverMinorVersion:
          - minor: 16
            patch: 5
          - minor: 17
            patch: 5
          - minor: 18
            patch: 5
          - minor: 19
            patch: 4
          - minor: 20
            patch: 2
        downloadAllStableExtensions:
          - 1
        downloadAllCommunityExtensions:
          - 1
        stablePluginBaseURL:
          # empty because it often changes, so it's better
          # to use the default one described in the Dockerfile
          # to make it consistent. However we keep this in GH Action
          # to make it easy to pass overrides in the future.
          - ""
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build image for testing
        id: docker_build_testing_image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: false
          load: true
          tags: kartoza/geoserver:manual-build
          build-args: |
            IMAGE_VERSION=${{ matrix.imageVersion.image }}
            JAVA_HOME=${{ matrix.imageVersion.javaHome }}
            GS_VERSION=${{ matrix.geoserverMajorVersion }}.${{ matrix.geoserverMinorVersion.minor }}.${{ matrix.geoserverMinorVersion.patch }}
            WAR_URL=http://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/geoserver-${GS_VERSION}-war.zip
            DOWNLOAD_ALL_STABLE_EXTENSIONS=${{ matrix.downloadAllStableExtensions }}
            DOWNLOAD_ALL_COMMUNITY_EXTENSIONS=${{ matrix.downloadAllCommunityExtensions }}
            STABLE_PLUGIN_BASE_URL=${{ matrix.stablePluginBaseURL }}
# We have some issues with cache size causing the build to fail
#          cache-from: |
#           type=gha,scope=test
#           type=gha,scope=prod
#           type=gha,scope=base
#          cache-to: type=gha,scope=test

# We may have this in the future
#      - name: Run scenario test ${{ matrix.scenario }}
#        working-directory: scenario_tests/${{ matrix.scenario }}
#        env:
#          COMPOSE_INTERACTIVE_NO_CLI: 1
#          PRINT_TEST_LOGS: 1
#        run: |
#          bash ./test.sh

  push-internal-pr-images:
    if: github.event_name == 'pull_request' && github.event.pull_request.base.repo.url == github.event.pull_request.head.repo.url
    runs-on: ubuntu-latest
    needs: [ run-scenario-tests ]
    strategy:
      matrix:
        geoserverVersion:
          - 2
        geoserverMajorVersion:
          - 2
        imageVersion:
          - image: 9.0-jdk11-openjdk-slim-buster
            javaHome: /usr/local/openjdk-11
        geoserverMinorVersion:
          - minor: 16
            patch: 5
          - minor: 17
            patch: 5
          - minor: 18
            patch: 5
          - minor: 19
            patch: 4
          - minor: 20
            patch: 2
        downloadAllStableExtensions:
          - 1
        downloadAllCommunityExtensions:
          - 1
        stablePluginBaseURL:
          # empty because it often changes, so it's better
          # to use the default one described in the Dockerfile
          # to make it consistent. However we keep this in GH Action
          # to make it easy to pass overrides in the future.
          - ""
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKERHUB_REPO}}/geoserver
          tags: |
            type=semver,pattern=\d.\d.\d
            type=ref,event=branch
            type=ref,event=pr

      - name: Build image for testing
        id: docker_build_testing_image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ steps.docker_meta.outputs.tags }}-${{ matrix.geoserverMajorVersion }}.${{ matrix.geoserverMinorVersion }}.${{ matrix.geoserverPatchVersion }}
          build-args: |
            IMAGE_VERSION=${{ matrix.imageVersion.image }}
            JAVA_HOME=${{ matrix.imageVersion.javaHome }}
            GS_VERSION=${{ matrix.geoserverMajorVersion }}.${{ matrix.geoserverMinorVersion.minor }}.${{ matrix.geoserverMinorVersion.patch }}
            WAR_URL=http://downloads.sourceforge.net/project/geoserver/GeoServer/${GS_VERSION}/geoserver-${GS_VERSION}-war.zip
            DOWNLOAD_ALL_STABLE_EXTENSIONS=${{ matrix.downloadAllStableExtensions }}
            DOWNLOAD_ALL_COMMUNITY_EXTENSIONS=${{ matrix.downloadAllCommunityExtensions }}
            STABLE_PLUGIN_BASE_URL=${{ matrix.stablePluginBaseURL }}
# We have some issues with cache size causing the build to fail
#          cache-from: |
#           type=gha,scope=test
#           type=gha,scope=prod
#           type=gha,scope=base
#          cache-to: type=gha,scope=test
