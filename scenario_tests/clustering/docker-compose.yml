version: '3.9'

volumes:
   geoserver-cluster-data:
   geo-db-data:

services:
   db:
      image: kartoza/postgis:16-3.4
      volumes:
        - geo-db-data:/var/lib/postgresql
        - ./tests/init.sql:/docker-entrypoint-initdb.d/init.sql
      environment:
        - POSTGRES_DB=gis
        - POSTGRES_USER=docker
        - POSTGRES_PASS=docker
        - ALLOW_IP_RANGE=0.0.0.0/0
        - FORCE_SSL=FALSE
      restart: on-failure
      healthcheck:
        test: "PGPASSWORD=docker pg_isready -h 127.0.0.1 -U docker -d gis"
   master:
      image: 'kartoza/geoserver:${TAG:-manual-build}'
      volumes:
         - geoserver-cluster-data:/opt/geoserver/data_dir
         - ./tests:/tests
      environment:
        - BROKER_URL=tcp://0.0.0.0:61661
        - READONLY=disabled
        - CLUSTER_DURABILITY=false
        - CLUSTERING=True
        - TOGGLE_MASTER=true
        - TOGGLE_SLAVE=true
        - DB_BACKEND=POSTGRES
        - HOST=db
        - POSTGRES_PORT=5432
        - POSTGRES_DB=gis
        - POSTGRES_USER=docker
        - POSTGRES_PASS=docker
        - SSL_MODE=allow
        - GEOSERVER_ADMIN_PASSWORD=myawesomegeoserver
        - GEOSERVER_ADMIN_USER=admin
        - TEST_CLASS=test_clustering_master.GeoServerClusteringMaster
      restart: on-failure
      depends_on:
        db:
          condition: service_healthy
      healthcheck:
        test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null -u admin:'myawesomegeoserver' http://localhost:8080/geoserver/rest/about/version.xml"
        interval: 1m30s
        timeout: 10s
        retries: 3
   node:
      image: 'kartoza/geoserver:${TAG:-manual-build}'
      volumes:
         - geoserver-cluster-data:/opt/geoserver/data_dir
         - ./tests:/tests
      environment:
        - BROKER_URL=tcp://master:61661
        - READONLY=disabled
        - CLUSTER_DURABILITY=false
        - CLUSTERING=True
        - TOGGLE_MASTER=true
        - TOGGLE_SLAVE=true
        - EMBEDDED_BROKER=disabled
        - HOST=db
        - POSTGRES_PORT=5432
        - POSTGRES_DB=gis
        - POSTGRES_USER=docker
        - POSTGRES_PASS=docker
        - SSL_MODE=allow
        - GEOSERVER_ADMIN_PASSWORD=myawesomegeoserver
        - GEOSERVER_ADMIN_USER=admin
        - TEST_CLASS=test_clustering_node.GeoServerClusteringNode
      restart: on-failure
      depends_on:
        master:
          condition: service_started
        db:
          condition: service_healthy
      healthcheck:
        test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null -u admin:'myawesomegeoserver' http://localhost:8080/geoserver/rest/about/version.xml"
        interval: 1m30s
        timeout: 10s
        retries: 3

   

